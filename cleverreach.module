<?php
function cleverreach_permission() {
    return array(
        'administer cleverreach' => array(
            'title' => t('Administer CleverReach Module'),
        ),
    );
}

function cleverreach_menu() {
    $items['admin/config/services/cleverreach'] = array(
        'title' => t('CleverReach Module'),
        'description' => "Cleverreach admin overview.",
        'page callback' => '_cleverreach_admin_overview',
        'access arguments' => array('administer cleverreach'),
        'weight' => 1,
        'file' => 'cleverreach.admin.inc',
    );
    $items['admin/config/services/cleverreach/overview'] = array(
        'title' => 'CleverReach Overview',
        'weight' => 0,
        'type' => MENU_DEFAULT_LOCAL_TASK,
    );
    $items['admin/config/services/cleverreach/settings'] = array(
        'title' => t('CleverReach Settings'),
        'description' => "Fill in your Cleverreach API data.",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('_cleverreach_admin_settings'),
        'access arguments' => array('administer cleverreach'),
        'weight' => 2,
        'type' => MENU_LOCAL_TASK,
        'file' => 'cleverreach.admin.inc',
    );
    $items['admin/config/services/cleverreach/delblock/%'] = array(
        'title' => t('Delete CleverReach Block'),
        'description' => "Delete the CleverReach Block.",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('_cleverreach_del_block_form', 5),
        'access arguments' => array('administer cleverreach'),
        'type' => MENU_CALLBACK,
        'file' => 'cleverreach.admin.inc',
    );
    $items['admin/config/services/cleverreach/editblock/%'] = array(
        'title' => t('Edit CleverReach Block'),
        'description' => "Edit the CleverReach Block.",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('_cleverreach_edit_block_form', 5),
        'access arguments' => array('administer cleverreach'),
        'type' => MENU_CALLBACK,
        'file' => 'cleverreach.admin.inc',
    );
    $items['admin/config/services/cleverreach/addblock'] = array(
        'title' => t('add Block'),
        'description' => "Add a CleverReach Form Block.",
        'page callback' => 'drupal_get_form',
        'page arguments' => array('_cleverreach_add_block_form'),
        'access arguments' => array('administer cleverreach'),
        'weight' => 3,
        'type' => MENU_LOCAL_ACTION,
        'file' => 'cleverreach.admin.inc',
    );
    return $items;
}

function _cleverreach_get_settings() {
    $cr_api = array(
        'key' => variable_get('cleverreach_api_key', ''),
        'url' => variable_get('cleverreach_wsdl_url', ''),
    );
    if(empty($cr_api["key"]) || empty($cr_api["url"])) {
        watchdog('CleverReach', t('api settings are incomplete'));
        return false;
    }
    else {
        return $cr_api;
    }   
}

function cleverreach_cron() {
    $queue = DrupalQueue::get('cleverreach_group_update_cron');
    $queue->createItem(array());
}

function cleverreach_cron_queue_info(){
    $queues['cleverreach_group_update_cron'] = array(
        'worker callback' => '_cleverreach_group_update',
        'time' => 120,
    );
    return $queues;
}

function _cleverreach_group_update() {
    $settings = _cleverreach_get_settings();
    if(is_array($settings)) {
        $api = new SoapClient($settings["url"]);
        $result = $api->groupGetList($settings["key"]);
        if($result->status == 'SUCCESS') {
            $drop = db_truncate('cleverreach_groups')->execute();
            $query = db_insert('cleverreach_groups')->fields(array('crgid', 'name', 'attributes', 'active_count', 'inactive_count', 'last_mailing', 'last_changed'));
            foreach($result->data as $key => $value) {
                $attr = array();
                $details = $api->groupGetDetails($settings["key"], $value->id);
                foreach($details->data->attributes as $key => $valued) {
                    array_push($attr, array('key' => $valued->key, 'type' => $valued->type, 'variable' => $valued->variable));
                }
                $attr = serialize($attr);
                $query->values(
                    array(
                        'crgid' => $value->id,
                        'name' => $value->name,
                        'attributes' => $attr,
                        'active_count' => $value->count,
                        'inactive_count' => $value->inactive_count,
                        'last_mailing' => $value->last_mailing,
                        'last_changed' => $value->last_changed,
                    )
                );
            }
            $query->execute();
            variable_set('cleverreach_last_group_fetch', time());
            watchdog('CleverReach', t('groups updated successfully'));
            drupal_set_message(t('CleverReach groups updated successfully'));
        }
        else {
            watchdog('CleverReach', t('group update failed'));
            drupal_set_message(t('CleverReach group update failed'), 'error');
        }
        
    }
    else {
        drupal_set_message(t('CleverReach group update failed'), 'error');
    }
}

function _cleverreach_get_groupName($listid) {
    if(empty($listid) || !is_numeric($listid)) {
        return false;
    }
    else {
        $name = db_select("cleverreach_groups", "g")
            ->fields("g", array("name"))
            ->condition("crgid", $listid)
            ->execute()
            ->fetchField();
        return $name;
    }
}

function cleverreach_block_info() {
    $blocks = array();
    $results = db_select('cleverreach_block_forms', 'bf')
        ->fields('bf')
        ->condition('active', 1, '=')
        ->execute();
    foreach($results as $result) {
        $blocks['cr_block_'.$result->bid] = array(
            'info' => t('CleverReach: '._cleverreach_get_groupName($result->listid)),
            'cache' => DRUPAL_NO_CACHE,
        );
    }
    return $blocks;
}

function cleverreach_block_view($delta = '') {
    $block = array(); 
    if(substr($delta, 0, 9) == 'cr_block_') {
        $tmp = explode("_", $delta);
        if(is_numeric($tmp[2])) {
            $result = db_select('cleverreach_block_forms', 'bf')
                ->fields('bf')
                ->condition('bid', $tmp[2], '=')
                ->condition('active', 1, '=')
                ->execute()
                ->fetchAssoc();
            $block['subject'] = t('CleverReach: '._cleverreach_get_groupName($result['listid']));
            $block['content'] = drupal_get_form('_cleverreach_build_blockForm_'.$result['bid']);
        }
    }
    return $block;
}

function _cleverreach_build_blockForm($form, &$form_state) {
    $form = array();
    $form['#tree'] = TRUE;
    $tmp = explode("_", $form_state['build_info']['form_id']);
    $bid = is_numeric($tmp[4]) ? $tmp[4] : 0; 
    $form['cr_block_bid'] = array(
        '#type' => 'hidden',
        '#value' => $bid,
    );
    $form[$bid]['cr_block_mail_'.$bid] = array(
        '#type' => 'textfield',
        '#title' => t('E-Mail:'),
        '#required' => 1,
        '#size' => 25,
    );
    $fields = db_select("cleverreach_block_forms", "bf")
            ->fields("bf", array("fields"))
            ->condition("bid", $bid)
            ->execute()
            ->fetchField();
    $un_fields = unserialize($fields);
    if(count($un_fields) > 0 && !empty($un_fields)) {
        foreach($un_fields as $key => $value) {
            $form[$bid]['cr_block_'.$value["name"].'_'.$bid] = array(
                '#type' => 'textfield',
                '#title' => ucfirst($value["name"]).":",
                '#size' => 25,
                '#required' => $value["required"],
            );
        }
    }
    $form[$bid]['cr_block_submit'] = array(
        '#type' => 'submit',
        '#value' => t('Send'),
        '#validate' => array('_cleverreach_group_assign_validate'),
        '#submit' => array('_cleverreach_group_assign'),
    );
    return $form;
}

function cleverreach_forms($form_id, $args) {
    $forms = array();
    if(substr($form_id, 0, 29) == '_cleverreach_build_blockForm_') {
        $forms[$form_id] = array('callback' => '_cleverreach_build_blockForm'); 
    }
    return $forms;   
}

function _cleverreach_group_assign_validate($form, &$form_state) {
    $regex = '/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/';
    $bid = $form_state['values']['cr_block_bid'];
    if(!preg_match($regex, $form_state['values'][$bid]['cr_block_mail_'.$bid])) {
        form_set_error($bid.'][cr_block_mail_'.$bid, t('Please enter a valid email address.'));
    }
}

function _cleverreach_group_assign($form, &$form_state) {
    $source = variable_get('site_name', "CleverReach Drupal Module");
    $listid = db_select("cleverreach_block_forms", "bf")
            ->fields("bf", array("listid"))
            ->condition("bid", $form_state['values']['cr_block_bid'])
            ->execute()
            ->fetchField();
    $fields = db_select("cleverreach_block_forms", "bf")
            ->fields("bf", array("fields"))
            ->condition("bid", $form_state['values']['cr_block_bid'])
            ->execute()
            ->fetchField();
    $un_fields = unserialize($fields);
    $attr = array();
    if(count($un_fields) > 0) {
        foreach($un_fields as $key => $value) {
            $attr[] = array('key' => $value["name"], 'value' => $form_state['values'][$form_state['values']['cr_block_bid']]['cr_block_'.$value["name"].'_'.$form_state['values']['cr_block_bid']]);
        }       
    }
    if(count($attr) > 0) {
        $user = array(
            "email" => $form_state['values'][$form_state['values']['cr_block_bid']]['cr_block_mail_'.$form_state['values']['cr_block_bid']],
            "registered" => time(),
            "activated" => time(),
            "source" => $source,
            "attributes" => $attr,
        );
    }
    else {
        $user = array(
            "email" => $form_state['input'][$form_state['values']['cr_block_bid']]['cr_block_mail_'.$form_state['values']['cr_block_bid']],
            "registered" => time(),
            "activated" => time(),
            "source" => $source,
        );
    }
    $settings = _cleverreach_get_settings();
    $api = new SoapClient($settings["url"]);
    $result = $api->receiverAdd($settings["key"], $listid, $user);
    if($result->status == "SUCCESS") {   
        drupal_set_message(t('Your submission was successfully.'));
    }
    else {
        drupal_set_message(t('Error: Your submission failed.'), 'error');
    } 
}